// Code generated by oapi-codegen. DO NOT EDIT.
// Package aether provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.7.0 DO NOT EDIT.
package aether

import (
	"github.com/labstack/echo/v4"
)

// ServerInterface represents all server handlers.
type ServerInterface interface {
	// DELETE /connectivity-services
	// (DELETE /aether/v2.0.0/{target}/connectivity-services)
	DeleteConnectivityServices(ctx echo.Context, target Target) error
	// GET /connectivity-services
	// (GET /aether/v2.0.0/{target}/connectivity-services)
	GetConnectivityServices(ctx echo.Context, target Target) error
	// POST /connectivity-services
	// (POST /aether/v2.0.0/{target}/connectivity-services)
	PostConnectivityServices(ctx echo.Context, target Target) error
	// DELETE /connectivity-services/connectivity-service
	// (DELETE /aether/v2.0.0/{target}/connectivity-services/connectivity-service/{connectivity-service-id})
	DeleteConnectivityServicesConnectivityService(ctx echo.Context, target Target, connectivityServiceId string) error
	// GET /connectivity-services/connectivity-service
	// (GET /aether/v2.0.0/{target}/connectivity-services/connectivity-service/{connectivity-service-id})
	GetConnectivityServicesConnectivityService(ctx echo.Context, target Target, connectivityServiceId string) error
	// POST /connectivity-services/connectivity-service
	// (POST /aether/v2.0.0/{target}/connectivity-services/connectivity-service/{connectivity-service-id})
	PostConnectivityServicesConnectivityService(ctx echo.Context, target Target, connectivityServiceId string) error
	// DELETE /enterprises
	// (DELETE /aether/v2.0.0/{target}/enterprises)
	DeleteEnterprises(ctx echo.Context, target Target) error
	// GET /enterprises
	// (GET /aether/v2.0.0/{target}/enterprises)
	GetEnterprises(ctx echo.Context, target Target) error
	// POST /enterprises
	// (POST /aether/v2.0.0/{target}/enterprises)
	PostEnterprises(ctx echo.Context, target Target) error
	// DELETE /enterprises/enterprise
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id})
	DeleteEnterprisesEnterprise(ctx echo.Context, target Target, enterpriseId string) error
	// GET /enterprises/enterprise
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id})
	GetEnterprisesEnterprise(ctx echo.Context, target Target, enterpriseId string) error
	// POST /enterprises/enterprise
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id})
	PostEnterprisesEnterprise(ctx echo.Context, target Target, enterpriseId string) error
	// DELETE /enterprises/enterprise/{enterprise-id}/application
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id})
	DeleteEnterprisesEnterpriseApplication(ctx echo.Context, target Target, enterpriseId string, applicationId string) error
	// GET /enterprises/enterprise/{enterprise-id}/application
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id})
	GetEnterprisesEnterpriseApplication(ctx echo.Context, target Target, enterpriseId string, applicationId string) error
	// POST /enterprises/enterprise/{enterprise-id}/application
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id})
	PostEnterprisesEnterpriseApplication(ctx echo.Context, target Target, enterpriseId string, applicationId string) error
	// DELETE /enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id})
	DeleteEnterprisesEnterpriseApplicationEndpoint(ctx echo.Context, target Target, enterpriseId string, applicationId string, endpointId string) error
	// GET /enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id})
	GetEnterprisesEnterpriseApplicationEndpoint(ctx echo.Context, target Target, enterpriseId string, applicationId string, endpointId string) error
	// POST /enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id})
	PostEnterprisesEnterpriseApplicationEndpoint(ctx echo.Context, target Target, enterpriseId string, applicationId string, endpointId string) error
	// DELETE /enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}/mbr
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}/mbr)
	DeleteEnterprisesEnterpriseApplicationEndpointMbr(ctx echo.Context, target Target, enterpriseId string, applicationId string, endpointId string) error
	// GET /enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}/mbr
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}/mbr)
	GetEnterprisesEnterpriseApplicationEndpointMbr(ctx echo.Context, target Target, enterpriseId string, applicationId string, endpointId string) error
	// POST /enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}/mbr
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/application/{application-id}/endpoint/{endpoint-id}/mbr)
	PostEnterprisesEnterpriseApplicationEndpointMbr(ctx echo.Context, target Target, enterpriseId string, applicationId string, endpointId string) error
	// DELETE /enterprises/enterprise/{enterprise-id}/connectivity-service
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/connectivity-service/{connectivity-service})
	DeleteEnterprisesEnterpriseConnectivityService(ctx echo.Context, target Target, enterpriseId string, connectivityService string) error
	// GET /enterprises/enterprise/{enterprise-id}/connectivity-service
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/connectivity-service/{connectivity-service})
	GetEnterprisesEnterpriseConnectivityService(ctx echo.Context, target Target, enterpriseId string, connectivityService string) error
	// POST /enterprises/enterprise/{enterprise-id}/connectivity-service
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/connectivity-service/{connectivity-service})
	PostEnterprisesEnterpriseConnectivityService(ctx echo.Context, target Target, enterpriseId string, connectivityService string) error
	// DELETE /enterprises/enterprise/{enterprise-id}/site
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id})
	DeleteEnterprisesEnterpriseSite(ctx echo.Context, target Target, enterpriseId string, siteId string) error
	// GET /enterprises/enterprise/{enterprise-id}/site
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id})
	GetEnterprisesEnterpriseSite(ctx echo.Context, target Target, enterpriseId string, siteId string) error
	// POST /enterprises/enterprise/{enterprise-id}/site
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id})
	PostEnterprisesEnterpriseSite(ctx echo.Context, target Target, enterpriseId string, siteId string) error
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id})
	DeleteEnterprisesEnterpriseSiteDeviceGroup(ctx echo.Context, target Target, enterpriseId string, siteId string, deviceGroupId string) error
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id})
	GetEnterprisesEnterpriseSiteDeviceGroup(ctx echo.Context, target Target, enterpriseId string, siteId string, deviceGroupId string) error
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id})
	PostEnterprisesEnterpriseSiteDeviceGroup(ctx echo.Context, target Target, enterpriseId string, siteId string, deviceGroupId string) error
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device/{device-id})
	DeleteEnterprisesEnterpriseSiteDeviceGroupDevice(ctx echo.Context, target Target, enterpriseId string, siteId string, deviceGroupId string, deviceId string) error
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device/{device-id})
	GetEnterprisesEnterpriseSiteDeviceGroupDevice(ctx echo.Context, target Target, enterpriseId string, siteId string, deviceGroupId string, deviceId string) error
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/device/{device-id})
	PostEnterprisesEnterpriseSiteDeviceGroupDevice(ctx echo.Context, target Target, enterpriseId string, siteId string, deviceGroupId string, deviceId string) error
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/mbr
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/mbr)
	DeleteEnterprisesEnterpriseSiteDeviceGroupMbr(ctx echo.Context, target Target, enterpriseId string, siteId string, deviceGroupId string) error
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/mbr
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/mbr)
	GetEnterprisesEnterpriseSiteDeviceGroupMbr(ctx echo.Context, target Target, enterpriseId string, siteId string, deviceGroupId string) error
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/mbr
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device-group/{device-group-id}/mbr)
	PostEnterprisesEnterpriseSiteDeviceGroupMbr(ctx echo.Context, target Target, enterpriseId string, siteId string, deviceGroupId string) error
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/device
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device/{device-id})
	DeleteEnterprisesEnterpriseSiteDevice(ctx echo.Context, target Target, enterpriseId string, siteId string, deviceId string) error
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/device
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device/{device-id})
	GetEnterprisesEnterpriseSiteDevice(ctx echo.Context, target Target, enterpriseId string, siteId string, deviceId string) error
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/device
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/device/{device-id})
	PostEnterprisesEnterpriseSiteDevice(ctx echo.Context, target Target, enterpriseId string, siteId string, deviceId string) error
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/imsi-definition
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/imsi-definition)
	DeleteEnterprisesEnterpriseSiteImsiDefinition(ctx echo.Context, target Target, enterpriseId string, siteId string) error
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/imsi-definition
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/imsi-definition)
	GetEnterprisesEnterpriseSiteImsiDefinition(ctx echo.Context, target Target, enterpriseId string, siteId string) error
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/imsi-definition
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/imsi-definition)
	PostEnterprisesEnterpriseSiteImsiDefinition(ctx echo.Context, target Target, enterpriseId string, siteId string) error
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/ip-domain
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/ip-domain/{ip-domain-id})
	DeleteEnterprisesEnterpriseSiteIpDomain(ctx echo.Context, target Target, enterpriseId string, siteId string, ipDomainId string) error
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/ip-domain
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/ip-domain/{ip-domain-id})
	GetEnterprisesEnterpriseSiteIpDomain(ctx echo.Context, target Target, enterpriseId string, siteId string, ipDomainId string) error
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/ip-domain
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/ip-domain/{ip-domain-id})
	PostEnterprisesEnterpriseSiteIpDomain(ctx echo.Context, target Target, enterpriseId string, siteId string, ipDomainId string) error
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring)
	DeleteEnterprisesEnterpriseSiteMonitoring(ctx echo.Context, target Target, enterpriseId string, siteId string) error
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring)
	GetEnterprisesEnterpriseSiteMonitoring(ctx echo.Context, target Target, enterpriseId string, siteId string) error
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring)
	PostEnterprisesEnterpriseSiteMonitoring(ctx echo.Context, target Target, enterpriseId string, siteId string) error
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring/edge-device
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring/edge-device/{edge-device-id})
	DeleteEnterprisesEnterpriseSiteMonitoringEdgeDevice(ctx echo.Context, target Target, enterpriseId string, siteId string, edgeDeviceId string) error
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring/edge-device
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring/edge-device/{edge-device-id})
	GetEnterprisesEnterpriseSiteMonitoringEdgeDevice(ctx echo.Context, target Target, enterpriseId string, siteId string, edgeDeviceId string) error
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring/edge-device
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/monitoring/edge-device/{edge-device-id})
	PostEnterprisesEnterpriseSiteMonitoringEdgeDevice(ctx echo.Context, target Target, enterpriseId string, siteId string, edgeDeviceId string) error
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/sim-card
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/sim-card/{sim-id})
	DeleteEnterprisesEnterpriseSiteSimCard(ctx echo.Context, target Target, enterpriseId string, siteId string, simId string) error
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/sim-card
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/sim-card/{sim-id})
	GetEnterprisesEnterpriseSiteSimCard(ctx echo.Context, target Target, enterpriseId string, siteId string, simId string) error
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/sim-card
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/sim-card/{sim-id})
	PostEnterprisesEnterpriseSiteSimCard(ctx echo.Context, target Target, enterpriseId string, siteId string, simId string) error
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id})
	DeleteEnterprisesEnterpriseSiteSlice(ctx echo.Context, target Target, enterpriseId string, siteId string, sliceId string) error
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id})
	GetEnterprisesEnterpriseSiteSlice(ctx echo.Context, target Target, enterpriseId string, siteId string, sliceId string) error
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id})
	PostEnterprisesEnterpriseSiteSlice(ctx echo.Context, target Target, enterpriseId string, siteId string, sliceId string) error
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group/{device-group})
	DeleteEnterprisesEnterpriseSiteSliceDeviceGroup(ctx echo.Context, target Target, enterpriseId string, siteId string, sliceId string, deviceGroup string) error
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group/{device-group})
	GetEnterprisesEnterpriseSiteSliceDeviceGroup(ctx echo.Context, target Target, enterpriseId string, siteId string, sliceId string, deviceGroup string) error
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/device-group/{device-group})
	PostEnterprisesEnterpriseSiteSliceDeviceGroup(ctx echo.Context, target Target, enterpriseId string, siteId string, sliceId string, deviceGroup string) error
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter/{application})
	DeleteEnterprisesEnterpriseSiteSliceFilter(ctx echo.Context, target Target, enterpriseId string, siteId string, sliceId string, application string) error
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter/{application})
	GetEnterprisesEnterpriseSiteSliceFilter(ctx echo.Context, target Target, enterpriseId string, siteId string, sliceId string, application string) error
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/filter/{application})
	PostEnterprisesEnterpriseSiteSliceFilter(ctx echo.Context, target Target, enterpriseId string, siteId string, sliceId string, application string) error
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/mbr
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/mbr)
	DeleteEnterprisesEnterpriseSiteSliceMbr(ctx echo.Context, target Target, enterpriseId string, siteId string, sliceId string) error
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/mbr
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/mbr)
	GetEnterprisesEnterpriseSiteSliceMbr(ctx echo.Context, target Target, enterpriseId string, siteId string, sliceId string) error
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/mbr
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/mbr)
	PostEnterprisesEnterpriseSiteSliceMbr(ctx echo.Context, target Target, enterpriseId string, siteId string, sliceId string) error
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id})
	DeleteEnterprisesEnterpriseSiteSlicePriorityTrafficRule(ctx echo.Context, target Target, enterpriseId string, siteId string, sliceId string, priorityTrafficRuleId string) error
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id})
	GetEnterprisesEnterpriseSiteSlicePriorityTrafficRule(ctx echo.Context, target Target, enterpriseId string, siteId string, sliceId string, priorityTrafficRuleId string) error
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/slice/{slice-id}/priority-traffic-rule/{priority-traffic-rule-id})
	PostEnterprisesEnterpriseSiteSlicePriorityTrafficRule(ctx echo.Context, target Target, enterpriseId string, siteId string, sliceId string, priorityTrafficRuleId string) error
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/small-cell
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/small-cell/{small-cell-id})
	DeleteEnterprisesEnterpriseSiteSmallCell(ctx echo.Context, target Target, enterpriseId string, siteId string, smallCellId string) error
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/small-cell
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/small-cell/{small-cell-id})
	GetEnterprisesEnterpriseSiteSmallCell(ctx echo.Context, target Target, enterpriseId string, siteId string, smallCellId string) error
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/small-cell
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/small-cell/{small-cell-id})
	PostEnterprisesEnterpriseSiteSmallCell(ctx echo.Context, target Target, enterpriseId string, siteId string, smallCellId string) error
	// DELETE /enterprises/enterprise/{enterprise-id}/site/{site-id}/upf
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/upf/{upf-id})
	DeleteEnterprisesEnterpriseSiteUpf(ctx echo.Context, target Target, enterpriseId string, siteId string, upfId string) error
	// GET /enterprises/enterprise/{enterprise-id}/site/{site-id}/upf
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/upf/{upf-id})
	GetEnterprisesEnterpriseSiteUpf(ctx echo.Context, target Target, enterpriseId string, siteId string, upfId string) error
	// POST /enterprises/enterprise/{enterprise-id}/site/{site-id}/upf
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/site/{site-id}/upf/{upf-id})
	PostEnterprisesEnterpriseSiteUpf(ctx echo.Context, target Target, enterpriseId string, siteId string, upfId string) error
	// DELETE /enterprises/enterprise/{enterprise-id}/template
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/template/{template-id})
	DeleteEnterprisesEnterpriseTemplate(ctx echo.Context, target Target, enterpriseId string, templateId string) error
	// GET /enterprises/enterprise/{enterprise-id}/template
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/template/{template-id})
	GetEnterprisesEnterpriseTemplate(ctx echo.Context, target Target, enterpriseId string, templateId string) error
	// POST /enterprises/enterprise/{enterprise-id}/template
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/template/{template-id})
	PostEnterprisesEnterpriseTemplate(ctx echo.Context, target Target, enterpriseId string, templateId string) error
	// DELETE /enterprises/enterprise/{enterprise-id}/template/{template-id}/mbr
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/template/{template-id}/mbr)
	DeleteEnterprisesEnterpriseTemplateMbr(ctx echo.Context, target Target, enterpriseId string, templateId string) error
	// GET /enterprises/enterprise/{enterprise-id}/template/{template-id}/mbr
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/template/{template-id}/mbr)
	GetEnterprisesEnterpriseTemplateMbr(ctx echo.Context, target Target, enterpriseId string, templateId string) error
	// POST /enterprises/enterprise/{enterprise-id}/template/{template-id}/mbr
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/template/{template-id}/mbr)
	PostEnterprisesEnterpriseTemplateMbr(ctx echo.Context, target Target, enterpriseId string, templateId string) error
	// DELETE /enterprises/enterprise/{enterprise-id}/traffic-class
	// (DELETE /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/traffic-class/{traffic-class-id})
	DeleteEnterprisesEnterpriseTrafficClass(ctx echo.Context, target Target, enterpriseId string, trafficClassId string) error
	// GET /enterprises/enterprise/{enterprise-id}/traffic-class
	// (GET /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/traffic-class/{traffic-class-id})
	GetEnterprisesEnterpriseTrafficClass(ctx echo.Context, target Target, enterpriseId string, trafficClassId string) error
	// POST /enterprises/enterprise/{enterprise-id}/traffic-class
	// (POST /aether/v2.0.0/{target}/enterprises/enterprise/{enterprise-id}/traffic-class/{traffic-class-id})
	PostEnterprisesEnterpriseTrafficClass(ctx echo.Context, target Target, enterpriseId string, trafficClassId string) error
}

// ServerInterfaceWrapper converts echo contexts to parameters.
type ServerInterfaceWrapper struct {
	Handler ServerInterface
}

// DeleteConnectivityServices converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteConnectivityServices(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteConnectivityServices(ctx, target)
	return err
}

// GetConnectivityServices converts echo context to params.
func (w *ServerInterfaceWrapper) GetConnectivityServices(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetConnectivityServices(ctx, target)
	return err
}

// PostConnectivityServices converts echo context to params.
func (w *ServerInterfaceWrapper) PostConnectivityServices(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostConnectivityServices(ctx, target)
	return err
}

// DeleteConnectivityServicesConnectivityService converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteConnectivityServicesConnectivityService(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "connectivity-service-id" -------------
	var connectivityServiceId string

	connectivityServiceId = ctx.Param("connectivity-service-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteConnectivityServicesConnectivityService(ctx, target, connectivityServiceId)
	return err
}

// GetConnectivityServicesConnectivityService converts echo context to params.
func (w *ServerInterfaceWrapper) GetConnectivityServicesConnectivityService(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "connectivity-service-id" -------------
	var connectivityServiceId string

	connectivityServiceId = ctx.Param("connectivity-service-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetConnectivityServicesConnectivityService(ctx, target, connectivityServiceId)
	return err
}

// PostConnectivityServicesConnectivityService converts echo context to params.
func (w *ServerInterfaceWrapper) PostConnectivityServicesConnectivityService(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "connectivity-service-id" -------------
	var connectivityServiceId string

	connectivityServiceId = ctx.Param("connectivity-service-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostConnectivityServicesConnectivityService(ctx, target, connectivityServiceId)
	return err
}

// DeleteEnterprises converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprises(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprises(ctx, target)
	return err
}

// GetEnterprises converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprises(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprises(ctx, target)
	return err
}

// PostEnterprises converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprises(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprises(ctx, target)
	return err
}

// DeleteEnterprisesEnterprise converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterprise(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterprise(ctx, target, enterpriseId)
	return err
}

// GetEnterprisesEnterprise converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterprise(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterprise(ctx, target, enterpriseId)
	return err
}

// PostEnterprisesEnterprise converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterprise(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterprise(ctx, target, enterpriseId)
	return err
}

// DeleteEnterprisesEnterpriseApplication converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseApplication(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "application-id" -------------
	var applicationId string

	applicationId = ctx.Param("application-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterpriseApplication(ctx, target, enterpriseId, applicationId)
	return err
}

// GetEnterprisesEnterpriseApplication converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterpriseApplication(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "application-id" -------------
	var applicationId string

	applicationId = ctx.Param("application-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterpriseApplication(ctx, target, enterpriseId, applicationId)
	return err
}

// PostEnterprisesEnterpriseApplication converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterpriseApplication(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "application-id" -------------
	var applicationId string

	applicationId = ctx.Param("application-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterpriseApplication(ctx, target, enterpriseId, applicationId)
	return err
}

// DeleteEnterprisesEnterpriseApplicationEndpoint converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseApplicationEndpoint(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "application-id" -------------
	var applicationId string

	applicationId = ctx.Param("application-id")

	// ------------- Path parameter "endpoint-id" -------------
	var endpointId string

	endpointId = ctx.Param("endpoint-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterpriseApplicationEndpoint(ctx, target, enterpriseId, applicationId, endpointId)
	return err
}

// GetEnterprisesEnterpriseApplicationEndpoint converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterpriseApplicationEndpoint(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "application-id" -------------
	var applicationId string

	applicationId = ctx.Param("application-id")

	// ------------- Path parameter "endpoint-id" -------------
	var endpointId string

	endpointId = ctx.Param("endpoint-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterpriseApplicationEndpoint(ctx, target, enterpriseId, applicationId, endpointId)
	return err
}

// PostEnterprisesEnterpriseApplicationEndpoint converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterpriseApplicationEndpoint(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "application-id" -------------
	var applicationId string

	applicationId = ctx.Param("application-id")

	// ------------- Path parameter "endpoint-id" -------------
	var endpointId string

	endpointId = ctx.Param("endpoint-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterpriseApplicationEndpoint(ctx, target, enterpriseId, applicationId, endpointId)
	return err
}

// DeleteEnterprisesEnterpriseApplicationEndpointMbr converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseApplicationEndpointMbr(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "application-id" -------------
	var applicationId string

	applicationId = ctx.Param("application-id")

	// ------------- Path parameter "endpoint-id" -------------
	var endpointId string

	endpointId = ctx.Param("endpoint-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterpriseApplicationEndpointMbr(ctx, target, enterpriseId, applicationId, endpointId)
	return err
}

// GetEnterprisesEnterpriseApplicationEndpointMbr converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterpriseApplicationEndpointMbr(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "application-id" -------------
	var applicationId string

	applicationId = ctx.Param("application-id")

	// ------------- Path parameter "endpoint-id" -------------
	var endpointId string

	endpointId = ctx.Param("endpoint-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterpriseApplicationEndpointMbr(ctx, target, enterpriseId, applicationId, endpointId)
	return err
}

// PostEnterprisesEnterpriseApplicationEndpointMbr converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterpriseApplicationEndpointMbr(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "application-id" -------------
	var applicationId string

	applicationId = ctx.Param("application-id")

	// ------------- Path parameter "endpoint-id" -------------
	var endpointId string

	endpointId = ctx.Param("endpoint-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterpriseApplicationEndpointMbr(ctx, target, enterpriseId, applicationId, endpointId)
	return err
}

// DeleteEnterprisesEnterpriseConnectivityService converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseConnectivityService(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "connectivity-service" -------------
	var connectivityService string

	connectivityService = ctx.Param("connectivity-service")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterpriseConnectivityService(ctx, target, enterpriseId, connectivityService)
	return err
}

// GetEnterprisesEnterpriseConnectivityService converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterpriseConnectivityService(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "connectivity-service" -------------
	var connectivityService string

	connectivityService = ctx.Param("connectivity-service")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterpriseConnectivityService(ctx, target, enterpriseId, connectivityService)
	return err
}

// PostEnterprisesEnterpriseConnectivityService converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterpriseConnectivityService(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "connectivity-service" -------------
	var connectivityService string

	connectivityService = ctx.Param("connectivity-service")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterpriseConnectivityService(ctx, target, enterpriseId, connectivityService)
	return err
}

// DeleteEnterprisesEnterpriseSite converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSite(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterpriseSite(ctx, target, enterpriseId, siteId)
	return err
}

// GetEnterprisesEnterpriseSite converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterpriseSite(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterpriseSite(ctx, target, enterpriseId, siteId)
	return err
}

// PostEnterprisesEnterpriseSite converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterpriseSite(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterpriseSite(ctx, target, enterpriseId, siteId)
	return err
}

// DeleteEnterprisesEnterpriseSiteDeviceGroup converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteDeviceGroup(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-group-id" -------------
	var deviceGroupId string

	deviceGroupId = ctx.Param("device-group-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterpriseSiteDeviceGroup(ctx, target, enterpriseId, siteId, deviceGroupId)
	return err
}

// GetEnterprisesEnterpriseSiteDeviceGroup converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteDeviceGroup(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-group-id" -------------
	var deviceGroupId string

	deviceGroupId = ctx.Param("device-group-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterpriseSiteDeviceGroup(ctx, target, enterpriseId, siteId, deviceGroupId)
	return err
}

// PostEnterprisesEnterpriseSiteDeviceGroup converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteDeviceGroup(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-group-id" -------------
	var deviceGroupId string

	deviceGroupId = ctx.Param("device-group-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterpriseSiteDeviceGroup(ctx, target, enterpriseId, siteId, deviceGroupId)
	return err
}

// DeleteEnterprisesEnterpriseSiteDeviceGroupDevice converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteDeviceGroupDevice(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-group-id" -------------
	var deviceGroupId string

	deviceGroupId = ctx.Param("device-group-id")

	// ------------- Path parameter "device-id" -------------
	var deviceId string

	deviceId = ctx.Param("device-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterpriseSiteDeviceGroupDevice(ctx, target, enterpriseId, siteId, deviceGroupId, deviceId)
	return err
}

// GetEnterprisesEnterpriseSiteDeviceGroupDevice converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteDeviceGroupDevice(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-group-id" -------------
	var deviceGroupId string

	deviceGroupId = ctx.Param("device-group-id")

	// ------------- Path parameter "device-id" -------------
	var deviceId string

	deviceId = ctx.Param("device-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterpriseSiteDeviceGroupDevice(ctx, target, enterpriseId, siteId, deviceGroupId, deviceId)
	return err
}

// PostEnterprisesEnterpriseSiteDeviceGroupDevice converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteDeviceGroupDevice(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-group-id" -------------
	var deviceGroupId string

	deviceGroupId = ctx.Param("device-group-id")

	// ------------- Path parameter "device-id" -------------
	var deviceId string

	deviceId = ctx.Param("device-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterpriseSiteDeviceGroupDevice(ctx, target, enterpriseId, siteId, deviceGroupId, deviceId)
	return err
}

// DeleteEnterprisesEnterpriseSiteDeviceGroupMbr converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteDeviceGroupMbr(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-group-id" -------------
	var deviceGroupId string

	deviceGroupId = ctx.Param("device-group-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterpriseSiteDeviceGroupMbr(ctx, target, enterpriseId, siteId, deviceGroupId)
	return err
}

// GetEnterprisesEnterpriseSiteDeviceGroupMbr converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteDeviceGroupMbr(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-group-id" -------------
	var deviceGroupId string

	deviceGroupId = ctx.Param("device-group-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterpriseSiteDeviceGroupMbr(ctx, target, enterpriseId, siteId, deviceGroupId)
	return err
}

// PostEnterprisesEnterpriseSiteDeviceGroupMbr converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteDeviceGroupMbr(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-group-id" -------------
	var deviceGroupId string

	deviceGroupId = ctx.Param("device-group-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterpriseSiteDeviceGroupMbr(ctx, target, enterpriseId, siteId, deviceGroupId)
	return err
}

// DeleteEnterprisesEnterpriseSiteDevice converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteDevice(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-id" -------------
	var deviceId string

	deviceId = ctx.Param("device-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterpriseSiteDevice(ctx, target, enterpriseId, siteId, deviceId)
	return err
}

// GetEnterprisesEnterpriseSiteDevice converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteDevice(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-id" -------------
	var deviceId string

	deviceId = ctx.Param("device-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterpriseSiteDevice(ctx, target, enterpriseId, siteId, deviceId)
	return err
}

// PostEnterprisesEnterpriseSiteDevice converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteDevice(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "device-id" -------------
	var deviceId string

	deviceId = ctx.Param("device-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterpriseSiteDevice(ctx, target, enterpriseId, siteId, deviceId)
	return err
}

// DeleteEnterprisesEnterpriseSiteImsiDefinition converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteImsiDefinition(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterpriseSiteImsiDefinition(ctx, target, enterpriseId, siteId)
	return err
}

// GetEnterprisesEnterpriseSiteImsiDefinition converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteImsiDefinition(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterpriseSiteImsiDefinition(ctx, target, enterpriseId, siteId)
	return err
}

// PostEnterprisesEnterpriseSiteImsiDefinition converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteImsiDefinition(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterpriseSiteImsiDefinition(ctx, target, enterpriseId, siteId)
	return err
}

// DeleteEnterprisesEnterpriseSiteIpDomain converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteIpDomain(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "ip-domain-id" -------------
	var ipDomainId string

	ipDomainId = ctx.Param("ip-domain-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterpriseSiteIpDomain(ctx, target, enterpriseId, siteId, ipDomainId)
	return err
}

// GetEnterprisesEnterpriseSiteIpDomain converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteIpDomain(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "ip-domain-id" -------------
	var ipDomainId string

	ipDomainId = ctx.Param("ip-domain-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterpriseSiteIpDomain(ctx, target, enterpriseId, siteId, ipDomainId)
	return err
}

// PostEnterprisesEnterpriseSiteIpDomain converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteIpDomain(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "ip-domain-id" -------------
	var ipDomainId string

	ipDomainId = ctx.Param("ip-domain-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterpriseSiteIpDomain(ctx, target, enterpriseId, siteId, ipDomainId)
	return err
}

// DeleteEnterprisesEnterpriseSiteMonitoring converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteMonitoring(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterpriseSiteMonitoring(ctx, target, enterpriseId, siteId)
	return err
}

// GetEnterprisesEnterpriseSiteMonitoring converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteMonitoring(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterpriseSiteMonitoring(ctx, target, enterpriseId, siteId)
	return err
}

// PostEnterprisesEnterpriseSiteMonitoring converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteMonitoring(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterpriseSiteMonitoring(ctx, target, enterpriseId, siteId)
	return err
}

// DeleteEnterprisesEnterpriseSiteMonitoringEdgeDevice converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteMonitoringEdgeDevice(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "edge-device-id" -------------
	var edgeDeviceId string

	edgeDeviceId = ctx.Param("edge-device-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterpriseSiteMonitoringEdgeDevice(ctx, target, enterpriseId, siteId, edgeDeviceId)
	return err
}

// GetEnterprisesEnterpriseSiteMonitoringEdgeDevice converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteMonitoringEdgeDevice(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "edge-device-id" -------------
	var edgeDeviceId string

	edgeDeviceId = ctx.Param("edge-device-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterpriseSiteMonitoringEdgeDevice(ctx, target, enterpriseId, siteId, edgeDeviceId)
	return err
}

// PostEnterprisesEnterpriseSiteMonitoringEdgeDevice converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteMonitoringEdgeDevice(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "edge-device-id" -------------
	var edgeDeviceId string

	edgeDeviceId = ctx.Param("edge-device-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterpriseSiteMonitoringEdgeDevice(ctx, target, enterpriseId, siteId, edgeDeviceId)
	return err
}

// DeleteEnterprisesEnterpriseSiteSimCard converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteSimCard(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "sim-id" -------------
	var simId string

	simId = ctx.Param("sim-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterpriseSiteSimCard(ctx, target, enterpriseId, siteId, simId)
	return err
}

// GetEnterprisesEnterpriseSiteSimCard converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteSimCard(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "sim-id" -------------
	var simId string

	simId = ctx.Param("sim-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterpriseSiteSimCard(ctx, target, enterpriseId, siteId, simId)
	return err
}

// PostEnterprisesEnterpriseSiteSimCard converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteSimCard(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "sim-id" -------------
	var simId string

	simId = ctx.Param("sim-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterpriseSiteSimCard(ctx, target, enterpriseId, siteId, simId)
	return err
}

// DeleteEnterprisesEnterpriseSiteSlice converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteSlice(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = ctx.Param("slice-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterpriseSiteSlice(ctx, target, enterpriseId, siteId, sliceId)
	return err
}

// GetEnterprisesEnterpriseSiteSlice converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteSlice(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = ctx.Param("slice-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterpriseSiteSlice(ctx, target, enterpriseId, siteId, sliceId)
	return err
}

// PostEnterprisesEnterpriseSiteSlice converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteSlice(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = ctx.Param("slice-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterpriseSiteSlice(ctx, target, enterpriseId, siteId, sliceId)
	return err
}

// DeleteEnterprisesEnterpriseSiteSliceDeviceGroup converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteSliceDeviceGroup(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = ctx.Param("slice-id")

	// ------------- Path parameter "device-group" -------------
	var deviceGroup string

	deviceGroup = ctx.Param("device-group")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterpriseSiteSliceDeviceGroup(ctx, target, enterpriseId, siteId, sliceId, deviceGroup)
	return err
}

// GetEnterprisesEnterpriseSiteSliceDeviceGroup converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteSliceDeviceGroup(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = ctx.Param("slice-id")

	// ------------- Path parameter "device-group" -------------
	var deviceGroup string

	deviceGroup = ctx.Param("device-group")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterpriseSiteSliceDeviceGroup(ctx, target, enterpriseId, siteId, sliceId, deviceGroup)
	return err
}

// PostEnterprisesEnterpriseSiteSliceDeviceGroup converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteSliceDeviceGroup(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = ctx.Param("slice-id")

	// ------------- Path parameter "device-group" -------------
	var deviceGroup string

	deviceGroup = ctx.Param("device-group")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterpriseSiteSliceDeviceGroup(ctx, target, enterpriseId, siteId, sliceId, deviceGroup)
	return err
}

// DeleteEnterprisesEnterpriseSiteSliceFilter converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteSliceFilter(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = ctx.Param("slice-id")

	// ------------- Path parameter "application" -------------
	var application string

	application = ctx.Param("application")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterpriseSiteSliceFilter(ctx, target, enterpriseId, siteId, sliceId, application)
	return err
}

// GetEnterprisesEnterpriseSiteSliceFilter converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteSliceFilter(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = ctx.Param("slice-id")

	// ------------- Path parameter "application" -------------
	var application string

	application = ctx.Param("application")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterpriseSiteSliceFilter(ctx, target, enterpriseId, siteId, sliceId, application)
	return err
}

// PostEnterprisesEnterpriseSiteSliceFilter converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteSliceFilter(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = ctx.Param("slice-id")

	// ------------- Path parameter "application" -------------
	var application string

	application = ctx.Param("application")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterpriseSiteSliceFilter(ctx, target, enterpriseId, siteId, sliceId, application)
	return err
}

// DeleteEnterprisesEnterpriseSiteSliceMbr converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteSliceMbr(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = ctx.Param("slice-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterpriseSiteSliceMbr(ctx, target, enterpriseId, siteId, sliceId)
	return err
}

// GetEnterprisesEnterpriseSiteSliceMbr converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteSliceMbr(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = ctx.Param("slice-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterpriseSiteSliceMbr(ctx, target, enterpriseId, siteId, sliceId)
	return err
}

// PostEnterprisesEnterpriseSiteSliceMbr converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteSliceMbr(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = ctx.Param("slice-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterpriseSiteSliceMbr(ctx, target, enterpriseId, siteId, sliceId)
	return err
}

// DeleteEnterprisesEnterpriseSiteSlicePriorityTrafficRule converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteSlicePriorityTrafficRule(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = ctx.Param("slice-id")

	// ------------- Path parameter "priority-traffic-rule-id" -------------
	var priorityTrafficRuleId string

	priorityTrafficRuleId = ctx.Param("priority-traffic-rule-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterpriseSiteSlicePriorityTrafficRule(ctx, target, enterpriseId, siteId, sliceId, priorityTrafficRuleId)
	return err
}

// GetEnterprisesEnterpriseSiteSlicePriorityTrafficRule converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteSlicePriorityTrafficRule(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = ctx.Param("slice-id")

	// ------------- Path parameter "priority-traffic-rule-id" -------------
	var priorityTrafficRuleId string

	priorityTrafficRuleId = ctx.Param("priority-traffic-rule-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterpriseSiteSlicePriorityTrafficRule(ctx, target, enterpriseId, siteId, sliceId, priorityTrafficRuleId)
	return err
}

// PostEnterprisesEnterpriseSiteSlicePriorityTrafficRule converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteSlicePriorityTrafficRule(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "slice-id" -------------
	var sliceId string

	sliceId = ctx.Param("slice-id")

	// ------------- Path parameter "priority-traffic-rule-id" -------------
	var priorityTrafficRuleId string

	priorityTrafficRuleId = ctx.Param("priority-traffic-rule-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterpriseSiteSlicePriorityTrafficRule(ctx, target, enterpriseId, siteId, sliceId, priorityTrafficRuleId)
	return err
}

// DeleteEnterprisesEnterpriseSiteSmallCell converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteSmallCell(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "small-cell-id" -------------
	var smallCellId string

	smallCellId = ctx.Param("small-cell-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterpriseSiteSmallCell(ctx, target, enterpriseId, siteId, smallCellId)
	return err
}

// GetEnterprisesEnterpriseSiteSmallCell converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteSmallCell(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "small-cell-id" -------------
	var smallCellId string

	smallCellId = ctx.Param("small-cell-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterpriseSiteSmallCell(ctx, target, enterpriseId, siteId, smallCellId)
	return err
}

// PostEnterprisesEnterpriseSiteSmallCell converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteSmallCell(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "small-cell-id" -------------
	var smallCellId string

	smallCellId = ctx.Param("small-cell-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterpriseSiteSmallCell(ctx, target, enterpriseId, siteId, smallCellId)
	return err
}

// DeleteEnterprisesEnterpriseSiteUpf converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseSiteUpf(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "upf-id" -------------
	var upfId string

	upfId = ctx.Param("upf-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterpriseSiteUpf(ctx, target, enterpriseId, siteId, upfId)
	return err
}

// GetEnterprisesEnterpriseSiteUpf converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterpriseSiteUpf(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "upf-id" -------------
	var upfId string

	upfId = ctx.Param("upf-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterpriseSiteUpf(ctx, target, enterpriseId, siteId, upfId)
	return err
}

// PostEnterprisesEnterpriseSiteUpf converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterpriseSiteUpf(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "site-id" -------------
	var siteId string

	siteId = ctx.Param("site-id")

	// ------------- Path parameter "upf-id" -------------
	var upfId string

	upfId = ctx.Param("upf-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterpriseSiteUpf(ctx, target, enterpriseId, siteId, upfId)
	return err
}

// DeleteEnterprisesEnterpriseTemplate converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseTemplate(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "template-id" -------------
	var templateId string

	templateId = ctx.Param("template-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterpriseTemplate(ctx, target, enterpriseId, templateId)
	return err
}

// GetEnterprisesEnterpriseTemplate converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterpriseTemplate(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "template-id" -------------
	var templateId string

	templateId = ctx.Param("template-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterpriseTemplate(ctx, target, enterpriseId, templateId)
	return err
}

// PostEnterprisesEnterpriseTemplate converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterpriseTemplate(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "template-id" -------------
	var templateId string

	templateId = ctx.Param("template-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterpriseTemplate(ctx, target, enterpriseId, templateId)
	return err
}

// DeleteEnterprisesEnterpriseTemplateMbr converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseTemplateMbr(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "template-id" -------------
	var templateId string

	templateId = ctx.Param("template-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterpriseTemplateMbr(ctx, target, enterpriseId, templateId)
	return err
}

// GetEnterprisesEnterpriseTemplateMbr converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterpriseTemplateMbr(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "template-id" -------------
	var templateId string

	templateId = ctx.Param("template-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterpriseTemplateMbr(ctx, target, enterpriseId, templateId)
	return err
}

// PostEnterprisesEnterpriseTemplateMbr converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterpriseTemplateMbr(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "template-id" -------------
	var templateId string

	templateId = ctx.Param("template-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterpriseTemplateMbr(ctx, target, enterpriseId, templateId)
	return err
}

// DeleteEnterprisesEnterpriseTrafficClass converts echo context to params.
func (w *ServerInterfaceWrapper) DeleteEnterprisesEnterpriseTrafficClass(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "traffic-class-id" -------------
	var trafficClassId string

	trafficClassId = ctx.Param("traffic-class-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.DeleteEnterprisesEnterpriseTrafficClass(ctx, target, enterpriseId, trafficClassId)
	return err
}

// GetEnterprisesEnterpriseTrafficClass converts echo context to params.
func (w *ServerInterfaceWrapper) GetEnterprisesEnterpriseTrafficClass(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "traffic-class-id" -------------
	var trafficClassId string

	trafficClassId = ctx.Param("traffic-class-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.GetEnterprisesEnterpriseTrafficClass(ctx, target, enterpriseId, trafficClassId)
	return err
}

// PostEnterprisesEnterpriseTrafficClass converts echo context to params.
func (w *ServerInterfaceWrapper) PostEnterprisesEnterpriseTrafficClass(ctx echo.Context) error {
	var err error
	// ------------- Path parameter "target" -------------
	var target Target

	target = Target(ctx.Param("target"))

	// ------------- Path parameter "enterprise-id" -------------
	var enterpriseId string

	enterpriseId = ctx.Param("enterprise-id")

	// ------------- Path parameter "traffic-class-id" -------------
	var trafficClassId string

	trafficClassId = ctx.Param("traffic-class-id")

	// Invoke the callback with all the unmarshalled arguments
	err = w.Handler.PostEnterprisesEnterpriseTrafficClass(ctx, target, enterpriseId, trafficClassId)
	return err
}

// This is a simple interface which specifies echo.Route addition functions which
// are present on both echo.Echo and echo.Group, since we want to allow using
// either of them for path registration
type EchoRouter interface {
	CONNECT(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	DELETE(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	GET(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	HEAD(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	OPTIONS(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	PATCH(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	POST(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	PUT(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
	TRACE(path string, h echo.HandlerFunc, m ...echo.MiddlewareFunc) *echo.Route
}

// RegisterHandlers adds each server route to the EchoRouter.
func RegisterHandlers(router EchoRouter, si ServerInterface) {
	RegisterHandlersWithBaseURL(router, si, "")
}

// Registers handlers, and prepends BaseURL to the paths, so that the paths
// can be served under a prefix.
func RegisterHandlersWithBaseURL(router EchoRouter, si ServerInterface, baseURL string) {

	wrapper := ServerInterfaceWrapper{
		Handler: si,
	}

	router.DELETE(baseURL+"/aether/v2.0.0/:target/connectivity-services", wrapper.DeleteConnectivityServices)
	router.GET(baseURL+"/aether/v2.0.0/:target/connectivity-services", wrapper.GetConnectivityServices)
	router.POST(baseURL+"/aether/v2.0.0/:target/connectivity-services", wrapper.PostConnectivityServices)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/connectivity-services/connectivity-service/:connectivity-service-id", wrapper.DeleteConnectivityServicesConnectivityService)
	router.GET(baseURL+"/aether/v2.0.0/:target/connectivity-services/connectivity-service/:connectivity-service-id", wrapper.GetConnectivityServicesConnectivityService)
	router.POST(baseURL+"/aether/v2.0.0/:target/connectivity-services/connectivity-service/:connectivity-service-id", wrapper.PostConnectivityServicesConnectivityService)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises", wrapper.DeleteEnterprises)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises", wrapper.GetEnterprises)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises", wrapper.PostEnterprises)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id", wrapper.DeleteEnterprisesEnterprise)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id", wrapper.GetEnterprisesEnterprise)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id", wrapper.PostEnterprisesEnterprise)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/application/:application-id", wrapper.DeleteEnterprisesEnterpriseApplication)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/application/:application-id", wrapper.GetEnterprisesEnterpriseApplication)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/application/:application-id", wrapper.PostEnterprisesEnterpriseApplication)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/application/:application-id/endpoint/:endpoint-id", wrapper.DeleteEnterprisesEnterpriseApplicationEndpoint)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/application/:application-id/endpoint/:endpoint-id", wrapper.GetEnterprisesEnterpriseApplicationEndpoint)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/application/:application-id/endpoint/:endpoint-id", wrapper.PostEnterprisesEnterpriseApplicationEndpoint)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/application/:application-id/endpoint/:endpoint-id/mbr", wrapper.DeleteEnterprisesEnterpriseApplicationEndpointMbr)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/application/:application-id/endpoint/:endpoint-id/mbr", wrapper.GetEnterprisesEnterpriseApplicationEndpointMbr)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/application/:application-id/endpoint/:endpoint-id/mbr", wrapper.PostEnterprisesEnterpriseApplicationEndpointMbr)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/connectivity-service/:connectivity-service", wrapper.DeleteEnterprisesEnterpriseConnectivityService)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/connectivity-service/:connectivity-service", wrapper.GetEnterprisesEnterpriseConnectivityService)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/connectivity-service/:connectivity-service", wrapper.PostEnterprisesEnterpriseConnectivityService)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id", wrapper.DeleteEnterprisesEnterpriseSite)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id", wrapper.GetEnterprisesEnterpriseSite)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id", wrapper.PostEnterprisesEnterpriseSite)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/device-group/:device-group-id", wrapper.DeleteEnterprisesEnterpriseSiteDeviceGroup)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/device-group/:device-group-id", wrapper.GetEnterprisesEnterpriseSiteDeviceGroup)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/device-group/:device-group-id", wrapper.PostEnterprisesEnterpriseSiteDeviceGroup)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/device-group/:device-group-id/device/:device-id", wrapper.DeleteEnterprisesEnterpriseSiteDeviceGroupDevice)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/device-group/:device-group-id/device/:device-id", wrapper.GetEnterprisesEnterpriseSiteDeviceGroupDevice)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/device-group/:device-group-id/device/:device-id", wrapper.PostEnterprisesEnterpriseSiteDeviceGroupDevice)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/device-group/:device-group-id/mbr", wrapper.DeleteEnterprisesEnterpriseSiteDeviceGroupMbr)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/device-group/:device-group-id/mbr", wrapper.GetEnterprisesEnterpriseSiteDeviceGroupMbr)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/device-group/:device-group-id/mbr", wrapper.PostEnterprisesEnterpriseSiteDeviceGroupMbr)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/device/:device-id", wrapper.DeleteEnterprisesEnterpriseSiteDevice)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/device/:device-id", wrapper.GetEnterprisesEnterpriseSiteDevice)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/device/:device-id", wrapper.PostEnterprisesEnterpriseSiteDevice)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/imsi-definition", wrapper.DeleteEnterprisesEnterpriseSiteImsiDefinition)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/imsi-definition", wrapper.GetEnterprisesEnterpriseSiteImsiDefinition)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/imsi-definition", wrapper.PostEnterprisesEnterpriseSiteImsiDefinition)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/ip-domain/:ip-domain-id", wrapper.DeleteEnterprisesEnterpriseSiteIpDomain)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/ip-domain/:ip-domain-id", wrapper.GetEnterprisesEnterpriseSiteIpDomain)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/ip-domain/:ip-domain-id", wrapper.PostEnterprisesEnterpriseSiteIpDomain)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/monitoring", wrapper.DeleteEnterprisesEnterpriseSiteMonitoring)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/monitoring", wrapper.GetEnterprisesEnterpriseSiteMonitoring)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/monitoring", wrapper.PostEnterprisesEnterpriseSiteMonitoring)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/monitoring/edge-device/:edge-device-id", wrapper.DeleteEnterprisesEnterpriseSiteMonitoringEdgeDevice)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/monitoring/edge-device/:edge-device-id", wrapper.GetEnterprisesEnterpriseSiteMonitoringEdgeDevice)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/monitoring/edge-device/:edge-device-id", wrapper.PostEnterprisesEnterpriseSiteMonitoringEdgeDevice)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/sim-card/:sim-id", wrapper.DeleteEnterprisesEnterpriseSiteSimCard)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/sim-card/:sim-id", wrapper.GetEnterprisesEnterpriseSiteSimCard)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/sim-card/:sim-id", wrapper.PostEnterprisesEnterpriseSiteSimCard)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/slice/:slice-id", wrapper.DeleteEnterprisesEnterpriseSiteSlice)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/slice/:slice-id", wrapper.GetEnterprisesEnterpriseSiteSlice)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/slice/:slice-id", wrapper.PostEnterprisesEnterpriseSiteSlice)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/slice/:slice-id/device-group/:device-group", wrapper.DeleteEnterprisesEnterpriseSiteSliceDeviceGroup)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/slice/:slice-id/device-group/:device-group", wrapper.GetEnterprisesEnterpriseSiteSliceDeviceGroup)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/slice/:slice-id/device-group/:device-group", wrapper.PostEnterprisesEnterpriseSiteSliceDeviceGroup)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/slice/:slice-id/filter/:application", wrapper.DeleteEnterprisesEnterpriseSiteSliceFilter)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/slice/:slice-id/filter/:application", wrapper.GetEnterprisesEnterpriseSiteSliceFilter)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/slice/:slice-id/filter/:application", wrapper.PostEnterprisesEnterpriseSiteSliceFilter)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/slice/:slice-id/mbr", wrapper.DeleteEnterprisesEnterpriseSiteSliceMbr)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/slice/:slice-id/mbr", wrapper.GetEnterprisesEnterpriseSiteSliceMbr)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/slice/:slice-id/mbr", wrapper.PostEnterprisesEnterpriseSiteSliceMbr)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/slice/:slice-id/priority-traffic-rule/:priority-traffic-rule-id", wrapper.DeleteEnterprisesEnterpriseSiteSlicePriorityTrafficRule)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/slice/:slice-id/priority-traffic-rule/:priority-traffic-rule-id", wrapper.GetEnterprisesEnterpriseSiteSlicePriorityTrafficRule)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/slice/:slice-id/priority-traffic-rule/:priority-traffic-rule-id", wrapper.PostEnterprisesEnterpriseSiteSlicePriorityTrafficRule)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/small-cell/:small-cell-id", wrapper.DeleteEnterprisesEnterpriseSiteSmallCell)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/small-cell/:small-cell-id", wrapper.GetEnterprisesEnterpriseSiteSmallCell)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/small-cell/:small-cell-id", wrapper.PostEnterprisesEnterpriseSiteSmallCell)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/upf/:upf-id", wrapper.DeleteEnterprisesEnterpriseSiteUpf)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/upf/:upf-id", wrapper.GetEnterprisesEnterpriseSiteUpf)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/site/:site-id/upf/:upf-id", wrapper.PostEnterprisesEnterpriseSiteUpf)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/template/:template-id", wrapper.DeleteEnterprisesEnterpriseTemplate)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/template/:template-id", wrapper.GetEnterprisesEnterpriseTemplate)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/template/:template-id", wrapper.PostEnterprisesEnterpriseTemplate)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/template/:template-id/mbr", wrapper.DeleteEnterprisesEnterpriseTemplateMbr)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/template/:template-id/mbr", wrapper.GetEnterprisesEnterpriseTemplateMbr)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/template/:template-id/mbr", wrapper.PostEnterprisesEnterpriseTemplateMbr)
	router.DELETE(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/traffic-class/:traffic-class-id", wrapper.DeleteEnterprisesEnterpriseTrafficClass)
	router.GET(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/traffic-class/:traffic-class-id", wrapper.GetEnterprisesEnterpriseTrafficClass)
	router.POST(baseURL+"/aether/v2.0.0/:target/enterprises/enterprise/:enterprise-id/traffic-class/:traffic-class-id", wrapper.PostEnterprisesEnterpriseTrafficClass)

}
